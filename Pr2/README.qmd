---
format:
  md:
    output-file: "README.md"
editor: "visual"
---

# Практика № 2

Основы обработки данных с помощью R и Dplyr

## Цель работы

1.  Развить практические навыки использования языка программирования R для обработки данных

2.  Закрепить знания базовых типов данных языка R

3.  Развить практические навыки использования функций обработки данныхх пакета dplyr - функции select(), filter(), mutate(), arrange(), group_by()

## Исходные данные

1.  Ноутбук

2.  OC Windows

3.  Rstudio

4.  Пакет dplyr

5.  Встроенный набор данных starwars

6.  Github

## План выполнения работы

1.  Установить пакет dplyr

2.  Выполнение поставленных задач

## Содержание практической работы

### Шаг 1

**На данном шаге происходит установка пакета dplyr**

Установка пакета dplyr

```{r}
#install.packages('dplyr')
```

Подключение пакета

```{r}
library(dplyr)
```

### Шаг 2

**На данном шаге происходит выполнение заданий**

Подключение встроенных данных starwars

```{r}
starwars <- dplyr::starwars
```

#### Задание 1. Сколько строк в датафрейме?

Для этого воспользуюсь командой nrow()

```{r}
starwars |> nrow()
```

#### Задание 2. Сколько столбцов в датафрейме?

Для этого воспользуюсь командой ncol()

```{r}
starwars |> ncol()
```

#### Задание 3. Как просмотреть примерный вид датафрейма?

Для просмотра вида датафрейма существует команда glimpse

```{r}
glimpse(starwars)
```

#### Задание 4. Сколько уникальных рас персонажей (species) представлено в данных?

```{r}
length(unique(starwars$species))
```

#### Задание 5. Найти самого высокого персонажа

```{r}
starwars |> arrange(desc(height)) |> head(1) |> select(name)
```

#### Задание 6. Найти всех персонажей ниже 170

```{r}
starwars |> filter(height < 170) |> select(name)
```

#### Задание 7. Подсчитать ИМТ (индекс массы тела) для всех персонажей. ИМТ подсчитать по формуле.

```{r}
starwars |> filter(!is.na(mass), !is.na(height)) |> mutate("ИМТ" = mass/(height * height)) |> select(name, "ИМТ")
```

#### Задание 8. Найти 10 самых вытянутых персонажей. "Вытянутость" оценить по отношению массы к росту персонажей

```{r}
starwars |> filter(!is.na(mass), !is.na(height)) |> mutate('Вытянутость' = mass/height) |> arrange(desc(Вытянутость)) |> head(10) |> select(name, 'Вытянутость')
```

#### Задание 9. Найти средний возраст персонажей каждой рассы вселенной звездных войн

```{r}
starwars |> filter(!is.na(birth_year)) |> group_by(species) |> summarise('Сред' = mean(birth_year))
```

#### Задание 10. Найти самый распространенный цвет глаз персонажей вселенной Звездных войн.

```{r}
starwars |> filter(!is.na(eye_color)) |> group_by(eye_color) |> summarise('CountEye'= n()) |> arrange(desc(CountEye)) |> head(1) |> select(eye_color)
```

#### Задание 11. Подсчитать среднюю длину имени в каждой расе вселенной Звездных Войн

```{r}
starwars |> mutate('lenName' = nchar(name)) |> group_by(species) |> summarise('meanNameLen' = mean(lenName))
```

## Оценка результатов

1.  Были успешно выполнены поставленные задачи

2.  Изучена библиотека dplyr и соответствующие функции для решения задач (filter, group_by...)

## Вывод

Получен навык практической работы с функциями обработки данных: select(), filter(), mutate(), arrange(), group_by()
